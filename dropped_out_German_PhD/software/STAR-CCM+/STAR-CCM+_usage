Usage: starccm+ [-server] [<options> ...] [<simfile>]

Where:
  -server                # Starts the STAR-CCM+ server. The default is to start the STAR-CCM+ client.

General options:
  -info                  # Prints information about the simulation file.
  -ini <file>            # Specify an .ini file to provide default starccm+ arguments.
  -loc                   # Prevent the server locator from starting.
  -new                   # Create a new simulation. If a simulation file is named and does not exist, it is created.
  -dmproject             # Specify Design Manager mode.
  -v, -vv, -vvv          # Verbose mode. Prints environment changes and subcommands.
  -version               # Print the version information and exit.
  -rsh <rsh command>     # Specify the remote shell command to use (default ssh).
  <simfile>              # Use the supplied simulation file (eg. star.sim).

License options:
  -lite                  # Use lite session license (reduced functionality).
  -powerpre              # Use 10 DOEtoken licenses to enable meshing and pre/post
  -nosuite               # Do not check out <name>suite licenses for additional nodes.
  -tokensonly            # Only use DOEtoken licenses.
  -notokens              # Do not use DOEtoken licenses.
  -doe-prefer-hpcdomains # Use hpcdomains licenses before using DOEtoken licenses for optimization studies.
  -power                 # Use Power Session license option.
  -podkey  <value>       # Specify a PoD license key
  -doeuuid <value>       # Specify a DoE UUID
  -doepower              # Use Power Session license for an optimization session license
  -licpath <path:...>    # Specify a license path that overrides the default license path
  -reserve <lic1,...>    # Specify which add-on licenses to reserve when a simulation is created/restored
  -noreserve             # Specify that no add-on licenses will be reserved when a  simulation is created/restored
  -noretry               # Specify no retry of required licenses
  -norelease             # Specify no release of reader licenses after geometry import
  -dmnoshare             # Design Manager will not take a shared session license
  -passtodesign <...>    # Design Manager passes the quote enclosed arguments to the compute simulation
  -preallocpower         # Design Manager pre-allocate Power Session license for design studies

Client options:
  -batch [command,...]   # Run in batch mode (no UI), commands are mesh, run, step or Java macro files.
  -batch-report          # Write a summary report of system usage of a batch run.
  -classpath <cp>        # Specify macro classpath.
  -config <name>         # Use a previously saved machine configuration.
  -save-config <name>    # Save the specified machine configuration.
  -fontsize <size>       # Override default ui font size.
  -laf <name>            # Override default ui look-and-feel.
  -host <host>[:port]    # Server host (and optional port) to join existing session.
  -port <port>           # Server port to join existing session.
  -locale <locale>       # Override default locale (en:US, ja, ru:RU).
  -m[acro] <file>        # Runs macro file upon client startup.
  -on [user@]<host>      # Remote host and username to launch serial server
  -noexit                # Do not shutdown server after batch file execution.
  -reset                 # Restore default client layout and settings.
  -time                  # Print server elapsed and cpu times on exit.
  -userdir <name>        # Append name to default client settings directory.
  -nbuserdir <name>      # Specify client settings directory.
  -clientcore            # Reserve one CPU core for running client in batch systems
  -clientldlibpath <path:...>  
                         # Append directories to the client LD_LIBRARY_PATH.
  -clientldpreload <file:...>  
                         # Set shared libraries list to the client LD_PRELOAD.
  -renderthreads <number_of_threads>
                         # Specify the number of client threads used for rendering.

Visualization options:
  -mesa                  # Force graphics mode to use software rendering library.
  -hardwarebatch         # Force graphics mode to use hardware rendering library in batch.

Server options:
  -collab                # Enable collaboration (allow other users to connect to server).
  -load                  # Load simulation file without waiting for a client to connect.
  -pio                   # use parallel I/O to load simulation file.
  -port <port>           # Specify server port to open.
  -portrange <range>     # Specify the number of ports the server can attempt to bind to.
  -proxy <host>          # Specify to start a proxy server on a host.
  -svrrsh <rsh command>  # Specify the server's rsh command if different from that specified using -rsh
  -ldlibpath <path:...>  # Append directories to the server LD_LIBRARY_PATH.
  -ldpreload <file:...>  # Set shared libraries list to the server LD_PRELOAD.
  -dp                    # specify double-precision (when both single and double precision are installed)
  -cpubind <policy,v>    # Bind processes to cores. Binding policies include
                         # off,bandwidth,latency (bandwidth is the default). "v" requests
                         # a report showing the process binding layout.
  -jobmanagerurl <URL>   # URL of the job manager instance (ReST interface)
  -taskid <pid>          # Task ID from the Job Manager
  -noconnect             # Specifies a session that is exclusive to the STAR-CCM+ console session that launched it.

Resource specification:  
  -batchsystem <batch system[:"options"]>
  -bs <batch system[:"options"]>
                         # Specify the batch management system under which STAR-CCM+ is being run.
  -hostregexpr <regexpr> # Use a regular expression to modify hostnames.
  -machinefile <file>    # Hosts resource file name.
  -np <np[,npcosim]>     # Specify the number of processes for parallel simulations 
                         # (and optionally for a co-simulating code), and the number
                         # of compute slots for Design Studies.
  -on <host[:np][,...]>  # Hosts to run tasks on.
  
Parallel options:
  -mpi <driver>          # Specify MPI driver to use.
  -fabric <fabric>       # Specify the fabric/interface to use
  -fabricverbose         # additional verbosity that can be used to identify the selected fabric
  -mpiflags <options>    # MPI driver expert options.
  -mpitest[:<options>]   # Perform MPI tests and exit.
  -phelp[:<option>]      # Print additional help for specified option.
  -printpids             # Print process IDs for each MPI rank.