%--------------------------------------------------%
% OUTPUT OF POISSON_NONLINEAR.PY
%--------------------------------------------------%

hong@dell:~/1_PROJECTS/GitHub/softwares/FEniCS_Examples/FEniCS_Tutorial_5_Poisson_Nonlinear$ python3 poisson_nonlinear.py 
u = x[0] + 2*x[1] + 1
f = -10*x[0] - 20*x[1] - 10
No Jacobian form specified for nonlinear variational problem.
Differentiating residual form F to obtain Jacobian J = F'.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Calling FFC just-in-time (JIT) compiler, this may take some time.
Solving nonlinear variational problem.
  Newton iteration 0: r (abs) = 4,533e+01 (tol = 1,000e-10) r (rel) = 1,000e+00 (tol = 1,000e-09)
  Newton iteration 1: r (abs) = 2,614e+01 (tol = 1,000e-10) r (rel) = 5,767e-01 (tol = 1,000e-09)
  Newton iteration 2: r (abs) = 7,883e+01 (tol = 1,000e-10) r (rel) = 1,739e+00 (tol = 1,000e-09)
  Newton iteration 3: r (abs) = 2,293e+01 (tol = 1,000e-10) r (rel) = 5,058e-01 (tol = 1,000e-09)
  Newton iteration 4: r (abs) = 4,990e+00 (tol = 1,000e-10) r (rel) = 1,101e-01 (tol = 1,000e-09)
  Newton iteration 5: r (abs) = 3,970e-01 (tol = 1,000e-10) r (rel) = 8,758e-03 (tol = 1,000e-09)
  Newton iteration 6: r (abs) = 2,964e-03 (tol = 1,000e-10) r (rel) = 6,539e-05 (tol = 1,000e-09)
  Newton iteration 7: r (abs) = 1,272e-07 (tol = 1,000e-10) r (rel) = 2,806e-09 (tol = 1,000e-09)
  Newton iteration 8: r (abs) = 1,613e-15 (tol = 1,000e-10) r (rel) = 3,558e-17 (tol = 1,000e-09)
  Newton solver finished in 8 iterations and 8 linear solver iterations.
error_max =  0.0
